{
  "hash": "2c7f504d95ad01db68cab9114937f93d",
  "result": {
    "markdown": "---\ntitle: \"How controlling for pretreatment covariates can introduce bias\"\ndate: \"2018-09-12\"\nbibliography: bib/blog.bib\n---\n\n\n\n\nConsider an observational study looking at the effect of a non-randomly assigned treatment, $Z$, on an outcome $Y$. Say you have a pretreatment covariate, $X$, that is correlated with both $Z$ and $Y$. Should you control for $X$ when you try to assess the effect of $Z$ on $Y$?\n\nThis has been a question of some disagreement, with @rosenbaum2002observational, for instance, arguing that \"there is little to no reason to avoid adjustment for a true covariate, a variable describing subjects before treatment,\" and @greenland1999causal and others arguing that you cannot answer this question without a causal model of how $Z$ relates to $X$ and $Y$. See also [this](https://andrewgelman.com/2009/07/23/pearls_and_gelm/) discussion hosted by Andy Gelman.  Controlling for pretreatment covariates in a randomized experiment usually can't hurt and usually increases precision -- but what about in an observational study in which pretreatment covariates might be correlated with both the (nonrandomly assigned) treatment and the outcome?\n\nDesign declaration and diagnosis makes it relatively simple to examine the kinds of cases that worry Greenland et al and see where risks of bias might come from.\n\nLet's declare a design with a model of the form:\n\n* $X = f_1(U_1, U_2)$\n* $Z = f_2(U_2)$\n* $Y = f_3(Z, U_1)$\n\nIn this world, $X$ is a function of background unobserved variables $U_1$ and $U_2$, a treatment variable $Z$ is a function of $U_2$, and an outcome $Y$ is a function of $Z$ and $U_1$. We can assume that that $X$ is determined prior to $Z$. We will use two answer strategies, both regression based approaches, one with a control and one without.^[In contrast to the regression approach examined here, Bayesian approaches that model the causal structure could use information on $X$ without introducing the kinds of problems presented here.] Here is the full declaration:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Parameters\nb <- 1\nN <- 40\n\n# Declaration\nmodel <- declare_model(N = N, U_1 = rnorm(N), U_2 = rnorm(N),\n                       X = U_1 + U_2, Z  = 1 * (U_2 > 0),\n                       potential_outcomes(Y ~ b * Z + U_1))\ninquiry     <- declare_inquiry(ate = mean(Y_Z_1 - Y_Z_0))\nmeasurement <- declare_measurement(Y = reveal_outcomes(Y ~ Z))\nanswer_1    <- declare_estimator(Y ~ Z, inquiry = \"ate\",\n                                 model = lm_robust, label = \"No control\")\nanswer_2    <- declare_estimator(Y ~ Z + X, inquiry = \"ate\",\n                                 model = lm_robust, label = \"With control\")\n\ndesign <- model + inquiry + measurement + answer_1 + answer_2\n```\n:::\n\n\n\nHere is the diagnosis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiagnosis <- diagnose_design(design)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n|Design |Inquiry |Estimator    |Bias  |RMSE |Power |Coverage |Mean Estimate |SD Estimate |Mean Se |Type S Rate |Mean Estimand |\n|:------|:-------|:------------|:-----|:----|:-----|:--------|:-------------|:-----------|:-------|:-----------|:-------------|\n|design |ate     |No control   |-0.00 |0.31 |0.86  |0.95     |1.00          |0.31        |0.32    |0.00        |1.00          |\n|design |ate     |With control |-1.17 |1.18 |0.14  |0.00     |-0.17         |0.17        |0.17    |0.98        |1.00          |\n:::\n:::\n\n\nWe see that the estimator without controls is unbiased while the one with controls is very biased. Clearly, introducing a control was a mistake, even though the control was pretreatment.\n\nThe reason why the estimator without controls is unbiased is simple enough: $U_2$ is correlated with $X$ and $Y$ (via $Z$), however it is not correlated with $Y$ given $Z$. Indeed, in the model given, it is as if $Z$ is randomly assigned by $U_2$.\n\nThe reason why the estimator with controls behaves so poorly is not as obvious. Conditioning on $X$ *introduces* a correlation between $Y$ and $Z$ that is not due to the effect of $Z$ on $Y$. In the language used by researchers working with graphical causal models, $X$ is a \"collider\" for $U_1$ and $U_2$. Conditioning on $X$ creates a \"backdoor path\" between $Z$ and $Y$, inducing a correlation between them that is not a result of the causal effect.\n\nFor a little more intuition, we can modify the design to look at a world in which $Z$ does not affect $Y$:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_design <- redesign(design, N = 5000, b = 0)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nDiagnosis yields:\n\n\n::: {.cell}\n::: {.cell-output-display}\n|estimator    |  bias|\n|:------------|-----:|\n|No control   |  0.00|\n|With control | -1.17|\n:::\n:::\n\n\nWe still observe bias. To see where this bias is coming from, let us draw data from this design and plot the relationship between $Z$ and $Y$. Doing so lets us see how $Z$ and $Y$ relate to to each other for different values of $X$.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndraw_data(null_design) %>%\n  ggplot(aes(X, Y, color = as.factor(Z))) +\n  geom_point(alpha = 0.5) +\n  geom_vline(xintercept = seq(-4, 4, 2)) +\n  scale_color_manual(values = c(\"blue\", \"red\"))\n```\n\n::: {.cell-output-display}\n![Note: Correlation between Z and Y introduced by controlling for X.](2018-09-12-controlling-pretreatment-covariates_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nWhat we see here is that, overall, the red points are no higher or lower than the blue points --- indicating no treatment effect. Yet *within any vertical band* (i.e.,  keeping $X$ fixed), the blue dots are generally higher than the red dots. Conditioning induces a non-causal correlation.\n\nThe implication is quite a deep one: models of data generating processes are sometimes required in order to justify the choice of statistical models.\n\n# References\n",
    "supporting": [
      "2018-09-12-controlling-pretreatment-covariates_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}