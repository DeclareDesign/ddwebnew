{
  "hash": "5f42644fcd50c995c066506051065c1e",
  "result": {
    "markdown": "---\ntitle: \"Sometimes blocking can reduce your precision\"\ndate: \"2018-09-24\"\noutput:\n  html_document:\n    highlight: tango\n    theme: cerulean\n    code_folding: show\nbibliography: bib/blog.bib\n---\n\n::: {.cell}\n\n:::\n\n\nYou can often improve the precision of your randomized controlled trial with blocking: first gather similar units together into groups, then run experiments inside each little group, then average results across experiments. Block random assignment (sometimes called stratified random assignment) can be great---increasing precision with blocking is like getting extra sample size for free. Blocking works because it's like controlling for a pre-treatment covariate in the \"Data Strategy\" rather than in the \"Answer Strategy.\" But sometimes it does more harm than good.\n\nThe standard experimental guidance is to block if you can in order to improve precision. (If for some reason you don't have access to the pre-treatment covariates before the experiment is conducted, don't fret, as the precision gains you would get from blocking on the front end can largely be made up by controlling on the back end.) In fact, even if you make blocks *at random*, you do as well as you would do under complete random assignment. For a textbook explanation of the benefits of blocking, see @gerber2012field (Section 3.6.1).\n\nBut is it possible to make things *worse*? Can you make a blocking that results in less precision than you would get from complete random assignment design?\n\nThe answer is yes. But you have to try really hard. If you organize units into groups that are internally unusually heterogeneous you can make things worse. For a formal analysis, see @imai2008variance.\n\n# Some intuition\n\nWhy does blocking usually work? Under most circumstances, blocking works because it limits the *types* of assignment that might result from randomization Blocking works well when it rules out \"bad\" random assignments in favor of \"good\" random assignments.\n\nFor example, if you've got four units and you're going to assign exactly two to treatment, there are ${4 \\choose 2} = 6$ possible ways to do it.\n\nImagine there is a covariate $X = \\{1, 2, 3, 4\\}$ that is correlated with potential outcomes. If we make matched pairs $\\{A, A, B, B\\}$, we've done a \"good\" blocking and now there are only 4 possible assignments. We've ruled out the two \"bad\" assignments in which we only treat the first two units or only treat the last two units.\n\nBut if we make \"bad blocks\" $\\{A, B, B, A\\}$, then we rule out the **good** assignments in which we treat units 1 and 4 or units 2 and 3 in favor of the **bad** assignments. It's odd scenarios like these that can lead to precision decreases.\n\n# Bad blocking in action\n\nSay your dataset includes information on romantic partners. You reason that couples tend to be similar on all sort of unobservables and so you decide to use the \"couples\" indicator as the blocking variable. Here's a design:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DeclareDesign)\nlibrary(tidyverse)\n\nN = 100\n\nmodel <- declare_model(\n  N = N, \n  X = sort(rnorm(N)), \n  u = rnorm(N), \n  potential_outcomes(Y ~ Z - X * Z + u/10)\n)\ninquiry     <- declare_inquiry(ATE = mean(Y_Z_1 - Y_Z_0))\nblocking    <- declare_step(fabricate, couples = rep(1:(N/2), each = 2))\nassignment  <- declare_assignment(Z = block_ra(blocks = couples))\nmeasurement <- declare_measurement(Y = reveal_outcomes(Y ~ Z))\nestimator   <- declare_estimator(Y ~ Z)\n\ndesign_likes <-  model + inquiry +\n                 blocking + assignment + measurement + estimator\n```\n:::\n\n\n\nThe design here built in the assumption that couples are similar by putting people together if they have adjacent values of a prognostic (and, let's assume, unobservable) variable, $X$. In this design we have assumed an average effect of 1, but heterogeneity of effects that depends on $X$.\n\nBut what if we are wrong about couples being similar? Let's now assume that couples contain maximally *dissimilar* people. We'll make a new design that differs from the last design by assuming a matching in which the lowest person on $X$ couples with the highest person on $X$, the second lowest with the second highest, and so on.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndesign_opposites <-  replace_step(design_likes,\n                                  blocking,\n                                  declare_step(fabricate, couples = c(1:(N/2), (N/2):1)))\n```\n:::\n\n\nWe also want to compare both of these to a design with no blocking. To do this we will take `design_likes` and make a new design that just replaces the assignment step with one that does not use the blocks:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndesign_no_blocks <-  replace_step(design_likes,\n                                  assignment,\n                                  declare_assignment(Z = complete_ra(N))\n)\n```\n:::\n\n\nWe can simulate all three designs in one go and graph the distribution of estimated effects for each design---that is the distribution of estimated effects that you might get if you ran the experiment many times.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulate_design(design_likes, design_no_blocks, design_opposites) %>%\n  ggplot(aes(estimate)) +\n    geom_histogram(bins = 30) +\n    facet_wrap( ~ design) +\n    theme_bw() +\n    theme(strip.background = element_blank())\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](2018-09-24-bad_blocks_bad_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThe plots paint a pretty clear picture. All the distributions are centered on 1 (the true average effect), but they vary quite a bit in how dispersed they are---the more dispersed, the more off our answer is likely to be in any given experiment. If we make blocks out of couples that are similar to each other, the sampling distribution is super tight, meaning we have are more likely to be close to the right answer in any given experiment. But if we make blocks out of couples that are very different from each other, we actually do worse than in the no blocking case.\n\nSo blocking here will tend to work well if indeed couples are similar on dimensions that are  correlated with potential outcomes. But the gains from blocking really depend on the assumption of couples being similar. If in fact \"opposites attract,\" then blocking on couple can do more harm than good.\n\nWe can confirm the graphical intuition by directly calculating the true standard error of each approach.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiagnose_design(design_likes, design_no_blocks, design_opposites,\n                diagnosands = declare_diagnosands(sd_estimate = sd(estimate)))\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n|Design           |SD Estimate |\n|:----------------|:-----------|\n|design_likes     |0.102       |\n|design_no_blocks |0.143       |\n|design_opposites |0.174       |\n:::\n:::\n\n\nSo there you have it. It is technically possible that some blocking strategies could make things worse. If you make homogeneous blocks (homogeneous in terms of potential outcomes), blocking helps. But if you make *heterogeneous* blocks (again in terms of potential outcomes) blocking could hurt.\n\n# Size\n\nAs discussed in @moore2012multivariate and @imai2008misunderstandings, \"bad blocking\" is often only a problem in small samples and can go away if the sample size is sufficiently large.\n\nHow small small is will depend on the background model and specifics of the estimand [@imai2008variance]. For any given model, however, `DeclareDesign` makes it easy to answer that kind of question. Here we do the same diagnosis as above but with larger designs with $N$s of 250 and 2500.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiagnose_design(Like_blocks_250  = redesign(design_likes,     N = 250),\n                No_blocks_250    = redesign(design_no_blocks, N = 250),\n                Opposites_250    = redesign(design_opposites, N = 250),\n                Like_blocks_2500 = redesign(design_likes,     N = 2500),\n                No_blocks_2500   = redesign(design_no_blocks, N = 2500),\n                Opposites_2500   = redesign(design_opposites, N = 2500),\n                diagnosands      = declare_diagnosands(sd_estimate = sd(estimate))\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n|Design           |    N|SD Estimate |\n|:----------------|----:|:-----------|\n|Like_blocks_250  |  250|0.064       |\n|No_blocks_250    |  250|0.091       |\n|Opposites_250    |  250|0.111       |\n|Like_blocks_2500 | 2500|0.020       |\n|No_blocks_2500   | 2500|0.029       |\n|Opposites_2500   | 2500|0.035       |\n:::\n:::\n\n\nWe see here how the loss from bad blocking declines, in absolute terms, with sample size (as does variance in general). In *relative* terms though we note that we are not seeing clear declines for this design. In the $N = 100$ case the variance in the sampling distribution with bad blocking is an estimated 47%  bigger than the variance with no blocking; for $N = 250$ it is 50% bigger and for $N = 2500$ it is 48% bigger.\n\n\n## References\n",
    "supporting": [
      "2018-09-24-bad_blocks_bad_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}