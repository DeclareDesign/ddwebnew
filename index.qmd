---
pagetitle: "DeclareDesign"
section-divs: false
toc: false
execute:
  message: false
  error: false
  warning: false
  cache: true
---

::: {.grid .v-center-container}

::: {.g-col-5}

# Declare and diagnose your research design

DeclareDesign is a set of software tools to plan, implement, analyze, and communicate about empirical research

<br>

[Get Started](getting-started/){.btn-action-primary .btn-action .btn .btn-success .btn-lg role="button"} 

[Software](/DeclareDesign/){.btn-action-primary .btn-action .btn .btn-success .btn-lg role="button"} 

[Read Book](https://book.declaredesign.org){.btn-action-primary .btn-action .btn .btn-success .btn-lg role="button"}

:::

::: {.g-col-2 }

:::

::: {.g-col-5 .text-center}
![](https://book.declaredesign.org/figures/cover.jpg){width=400 fig-id="img-border"}
:::

:::


<!-- tabset for declare diagnose redesign -->


::: {.panel-tabset}

## Declare

::: {.grid}
::: {.g-col-lg-6}
```{r, echo = FALSE, message = FALSE}
library(tidyverse)
library(knitr)
```
```{r}
library(DeclareDesign)

sample_size <- 100

two_arm_trial <-
  declare_model(N = sample_size,
                U = rnorm(N),
                potential_outcomes(Y ~ 0.2 * Z + U)) +
  declare_inquiry(ATE = mean(Y_Z_1 - Y_Z_0)) +
  declare_assignment(Z = complete_ra(N, prob = 0.5)) +
  declare_measurement(Y = reveal_outcomes(Y ~ Z)) +
  declare_estimator(Y ~ Z, inquiry = "ATE")
```
:::

::: {.g-col-lg-6}
```{r, eval = FALSE}
draw_data(two_arm_trial)
```
```{r, echo = FALSE}
draw_data(two_arm_trial) |> 
  head(3) |> 
  kable(digits = 2)
```

```{r, eval = FALSE}
run_design(two_arm_trial)
```
```{r, echo = FALSE}
run_design(two_arm_trial) |> 
  select(estimate, std.error, p.value, inquiry, estimand) |> 
  kable(digits = 2)
```
:::

:::


## Diagnose

::: {.grid}

::: {.g-col-lg-6}

```{r, eval = FALSE}
diagnosis <- diagnose_design(two_arm_trial)
tidy(diagnosis)
```
```{r, echo = FALSE}
diagnosis <- diagnose_design(two_arm_trial)
tidy(diagnosis) |> 
  select(diagnosand, estimate, std.error) |> 
  kable(digits = 3, row.names = FALSE)
```

:::

::: {.g-col-lg-6}

```{r, eval = FALSE}
library(ggplot2)
ggplot(data = get_simulations(diagnosis), 
       aes(x = estimate)) +
  geom_histogram() 
```
```{r dev.args = list(bg = 'transparent')}
#| fig.width: 4
#| fig.height: 3
#| echo: false
sims <- diagnosis |> get_simulations() 
diagnosands <- diagnosis |> get_diagnosands()

ggplot(sims, aes(estimate)) +
  geom_histogram(color = NA, fill = "#72B4F3", bins = 30) +
  geom_vline(
    data = diagnosands,
    aes(xintercept = mean_estimate),
    color = gray(0.1),
    lty = "dashed"
  ) +
  geom_vline(
    data = diagnosands,
    aes(xintercept = mean_estimand),
    color = "#C6227F",
    lwd = 1.25
  ) +
  annotate(
    "text",
    x = diagnosands$mean_estimand + 0.025,
    y = 50,
    hjust = 0,
    label = "Estimand",
    color = "#C6227F"
  ) +
  annotate(
    "text",
    x = diagnosands$mean_estimate - 0.025,
    y = 50,
    hjust = 1,
    label = "Average estimate",
    color = gray(0.1)
  ) +
  labs(x = "Simulation sampling distribution of estimator", y = "Density") +
  theme_minimal()
```
:::

:::


## Redesign

::: {.grid}

::: {.g-col-lg-6}

```{r, eval = FALSE}
diagnosis <-
  two_arm_trial |>
  redesign(sample_size = c(250, 500, 750, 1000, 1250)) |>
  diagnose_designs() |>
  tidy() |>
  filter(diagnosand == "power")

library(ggplot2)
ggplot(diagnosis, aes(sample_size, estimate)) + 
  geom_point() +
  geom_line()
```

:::

::: {.g-col-lg-6}

```{r dev.args = list(bg = 'transparent')}
#| fig.width: 6
#| fig.height: 3
#| echo: false
designs_ss <- 
  two_arm_trial |> 
  redesign(sample_size = c(250, 500, 750, 1000, 1250))

diagnosis_ss <- 
  diagnose_design(designs_ss, 
                  sims = 1000)

diagnosands <- 
  diagnosis_ss |> 
  tidy() |> 
  filter(diagnosand == "power")

ggplot(diagnosands, aes(sample_size, estimate)) + 
  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), fill = "#72B4F3", color = NA) + 
  geom_point() +
  geom_line() +
  geom_hline(yintercept = 0.8, color = "#C6227F", linewidth = 1, lty = "dashed") + 
  annotate("text", x = 800, y = 0.75, label = "80% power target", hjust = 0) + 
  labs(x = "Sample size", y = "Statistical power") + 
  theme_minimal()
```

:::

:::


:::

